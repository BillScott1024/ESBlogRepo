name: Blog CI/CD
 
on: [repository_dispatch]
 
jobs:
  blog-cicd:
    name: Hexo blog build & deploy
    runs-on: macos-latest # ubuntu-latest
    env:
      TZ: Asia/Shanghai
    steps:
    - name: Checkout codes
      uses: actions/checkout@v2
 
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '10.15.x'
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
 
    - name: Install dependencies
      run: |
        cd Blog/
        npm install
        npm install hexo-cli@latest -g
        npm install yuque-hexo@latest -g
        npm install nunjucks@latest -g
        npm un hexo-renderer-marked
        npm i hexo-renderer-markdown-it -g
        npm install markdown-it-emoji -g

        yuque-hexo sync
    - name: Generate files
      run: |
        cd Blog/
        hexo generate

    - name: Setup Git Infomation
      run: |
       git config --global user.name 'GA-YuQue-To-Hexo'
       git config --global user.email 'jaxsonwang@foxmail.com'

  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages

      env:
       Github_Pages: github.com/BillScott1024/billscott1024.github.io.git
       Github_Token: ${{ secrets.token_GithubAPI }}
      # You may pin to the exact commit or the version.
      # uses: JamesIves/github-pages-deploy-action@54066045208a389f6e16e9030494962f8afb4dfc
      uses: JamesIves/github-pages-deploy-action@3.5.9
      with:
        # You can configure the action to deploy using SSH by setting this option to true. More more information on how to add your ssh key pair please refer to the Using a Deploy Key section of this README.
        # In order for GitHub to trigger the rebuild of your page you must provide the action with the repositories provided GitHub token.
        GITHUB_TOKEN: Github_Token # optional
        # This is the branch you wish to deploy to, for example gh-pages or docs.
        BRANCH: master
        # The folder in your repository that you want to deploy. If your build script compiles into a directory named build you would put it here. Folder paths cannot have a leading / or ./. If you wish to deploy the root directory you can place a . here.
        FOLDER: public
        
        # If you need to customize the commit message for an integration you can do so.
        COMMIT_MESSAGE: "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')" # optional
        
        # Allows you to customize the name that is attached to the GitHub config which is used when pushing the deployment commits. If this is not included it will use the name in the GitHub context, followed by the name of the action.
        GIT_CONFIG_NAME: AutoPublic-YuQue-To-Hexo # optional
        # Allows you to customize the email that is attached to the GitHub config which is used when pushing the deployment commits. If this is not included it will use the email in the GitHub context, followed by a generic noreply GitHub email.
        GIT_CONFIG_EMAIL: jaxsonwang@foxmail.com # optional
        
    - name: Deploy To Coding Pages
      env: 
        Coding_Pages: git@e.coding.net:extingstudio1/extingstudio1/extingstudio1.git
        Coding_Token: ${{ secrets.token_CodingAPI }}
        Coding_Username: ${{ secrets.Username_Coding }} 
      run: | 
          git clone https://${Coding_Username}:${Coding_Token}@${Coding_Pages} .coding_pages
          cd .coding_pages 
          git checkout master
          cd ../ 
          rm -r ./public/.git/
          mv .coding_pages/.git/ ./public/
          cd ./public/
          git add . 
          git commit -F ../commit-message.log
          git push --force --quiet "https://${Coding_Username}:${Coding_Token}@${Coding_Pages}" master:master

